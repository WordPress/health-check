# Travis CI configuration file.
# @link https://travis-ci.org/

# Declare project language and PHP versions to test against.
# @link http://about.travis-ci.org/docs/user/languages/php/
language: php

# Declare versions of PHP to use
php:
  - 7.0


# Ditch sudo and use containers.
# @link https://docs.travis-ci.com/user/ci-environment/
sudo: false

# Tell Travis CI which distro to use
dist: trusty
# Travis CI environment matrix
env:
  matrix:
    - WP_VERSION=latest WP_MULTISITE=0
    - WP_VERSION=nightly WP_MULTISITE=0

# Setup NPM modules for Travis CI cache maintanence.
cache:
  apt: true
  directories:
    - $HOME/.npm
    - node_modules
    - vendor
    - $HOME/.composer/cache

before_install:
  - npm prune
  - npm update

# Use this to prepare your build for testing.
# e.g. copy database configurations, environment variables, etc.
# Failures in this section will result in build status 'errored'.
before_script:
  - |
    # Remove Xdebug for a huge performance increase:
    if [ -f ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then
      phpenv config-rm xdebug.ini
    else
      echo "xdebug.ini does not exist"
    fi
  - export PATH="$HOME/.composer/vendor/bin:$PATH"
  # - composer global require --dev phpunit/phpunit ^6
  # - which phpunit
  # - phpunit --version
  # Install phpunuit test suite
  # - bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION
  # The WordPress Coding Standards with checks and dependencies are pulled in with composer.
  - composer update

# Run test script commands.
# Default is specific to project language.
# All commands must exit with code 0 on success. Anything else is considered failure.
script:
  # Change to the src folder
  - cd src
  # Search for PHP syntax errors.
  - find . \( -name '*.php' \) -exec php -lf {} \;
  # Go back to the root before running further tests.
  - cd ..
  # Setup NodeJS version using NVM
  - node --version
  - npm --version
  - nvm install 6
  - npm --version
  - node --version
  # Install NPM modules
  - npm install
  - npm install -g grunt-cli
  # Run CSS, JS, & PHP Grunt tasks
  - grunt travis
  # PHPUnit
  # - cd .. && phpunit