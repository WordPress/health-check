name: Build Status

on:
  push:
    branches:
      - trunk
  pull_request:

jobs:

  # Creates a complete build of the plugin.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Sets up PHP.
  # - Logs debug information about the runner container.
  # - Installs Composer dependencies (use cache if possible).
  # - Make Composer packages available globally.
  # - Installs Node dependencies
  # - Run the plugin build scripts
  build-plugin:
    name: Create an installable plugin
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: none
          tools: composer, cs2pr

      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Cache NodeJS modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Log debug information
        run: |
          php --version
          node --version
          composer --version
          yarn --version

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v1
        with:
          composer-options: "--no-progress --no-ansi --no-interaction"

      - name: Make Composer packages available globally
        run: echo "${PWD}/vendor/bin" >> $GITHUB_PATH

      - name: Install Node dependencies
        run: yarn install

      - name: Build plugin
        run: yarn run build

      # Build a zip of master, but only if this is a push workflow scenario.
      - name: Set plugin build version
        if: ${{ github.event == 'push' }}
        run: |
          current_plugin_version_string=$(grep -oP '`.+?\* Version:\s+\K\S+$' health-check/health-check.php)
          current_commit_reference=$(git rev-parse --short "$GITHUB_SHA")
          new_plugin_version_string="${current_plugin_version_string}-${current_commit_reference}"
          grep -rl current_plugin_version_string . | xargs sed -i "s/current_plugin_version_string/$new_plugin_version_string/g"

      - name: Create zip of master at this time
        uses: actions/upload-artifact@v2
        if: ${{ github.event == 'push' }}
        with:
          name: health-check-latest
          path: health-check
